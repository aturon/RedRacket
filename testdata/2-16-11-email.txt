[rschwers@Tidalwaves RedRacket]$ racket test.rkt 
cpu time: 128 real time: 127 gc time: 0
#t
cpu time: 1 real time: 1 gc time: 0
#t
[rschwers@Tidalwaves RedRacket]$ more test.rkt
#lang racket

(require "retest.rkt")
(require racket/unsafe/ops)


(define (explode str)
  (let loop ((i 0) (n (unsafe-string-length str)) (acc '()))
    (cond [(unsafe-fx= i n) (reverse acc)]
          [else (loop (unsafe-fx+ 1 i) n (cons (unsafe-string-ref str i) acc))])))


(define s1 (make-string 100000 #\a))
(define email "schwers.r@gmail.com")
(define str (string-append s1 email s1))


(define str-list (explode str))

(define a
  (benchmark
   (build-test-dfa '((concatenation
                     (concatenation (repetition 0 +inf.0 (char-range "0" "z"))
                                    #\s #\c #\h #\w #\e #\r #\s #\. #\r #\@ #\g #\m #\a #\i #\l #\. #\c #\o #\m)
                     (repetition 0 +inf.0 (char-range "0" "z")))))))

(define (f1) (a str-list))
(time (f1))


(define (f2) (regexp-match? "schwers.r@gmail.com" str))

(time (f2))
